{"version":3,"sources":["components/login/login.js","service/postData.js","components/header/head.js","components/dashboard/dashboard.js","components/patients/patients.js","components/patients/add-new-patient.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","state","username","password","redirectToReferrer","login","bind","onChange","type","userData","this","Promise","resolve","reject","fetch","method","body","JSON","stringify","then","response","json","res","catch","error","result","responseJson","sessionStorage","setItem","setState","e","target","name","value","getItem","to","className","placeholder","id","onClick","React","Component","Dashboard","logout","created","Date","clear","class","href","data-feather","Patients","loading","patient","perPage","currentPage","data","results","width","map","i","key","cd_pt_name","cd_pt_uhid","cd_pt_age","action","for","maxlength","src","alt","App","exact","path","component","AddPatient","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.2074c8f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PostData} from '../../service/postData';\r\nclass Login extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state= {\r\n\t\t\tusername:'',\r\n\t\t\tpassword:'',\r\n\t\t\tredirectToReferrer: false\r\n\t\t}\r\n\t\tthis.login=this.login.bind(this);\r\n\t\tthis.onChange=this.onChange.bind(this)\r\n\t}\r\n\t login() {\r\n    if(this.state.username && this.state.password){\r\n      PostData('login',this.state).then((result) => {\r\n       let responseJson = result;\r\n       if(responseJson.userData){         \r\n         sessionStorage.setItem('userData',JSON.stringify(responseJson));\r\n         this.setState({redirectToReferrer: true});\r\n       }\r\n       \r\n      });\r\n    }\r\n    \r\n   }\r\n\r\n  onChange(e){\r\n    this.setState({[e.target.name]:e.target.value});\r\n   }\r\n\r\n\trender(){\r\n\t\tif (this.state.redirectToReferrer) {\r\n\t\t\treturn (<Redirect to={'/dashboard'}/>)\r\n\t\t  }\r\n\t\t \r\n\t\t  if(sessionStorage.getItem('userData')){\r\n\t\t\treturn (<Redirect to={'/dashboard'}/>)\r\n\t\t  }\r\n\t\treturn(\r\n\t\t\t<div>\t\r\n\t\t\t\t<section className=\"login\">\r\n\t\t\t\t    <div className=\"container-fluid\">\r\n\t\t\t\t        <div className=\"row\">\r\n\t\t\t\t            <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n\t\t\t\t                <h1>YONAC Trial</h1>\r\n\t\t\t\t                <h2>Login</h2>\r\n\t\t\t\t            </div>\r\n\t\t\t\t            <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n\t\t\t\t                <div className=\"form\">\r\n\t\t\t\t                    <input type=\"text\" placeholder=\"UserName\" id=\"username\" name=\"username\" onChange={this.onChange}/>\r\n\t\t\t\t                    <input type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" onChange={this.onChange}/>\r\n\t\t\t\t                    <input type=\"submit\" className=\"button success\" value=\"Login\" onClick={this.login}/>\r\n\t\t\t\t                    <span className='error'></span>\r\n\t\t\t\t                </div>\r\n\t\t\t\t            </div>\r\n\t\t\t\t        </div>\r\n\t\t\t\t    </div>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Login;","export function PostData(type, userData) {\r\n  let BaseURL = 'https://api.thewallscript.com/restful/';\r\n\r\n  return new Promise((resolve, reject) =>{\r\n       \r\n      fetch(BaseURL+type, {\r\n          method: 'POST',\r\n          body: JSON.stringify(userData)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n\r\n\r\n    });\r\n}","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PostData} from '../../service/postData';\r\nclass Dashboard extends React.Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t  redirectToReferrer: false,\r\n\t\t};\r\n\t\r\n\t\tthis.logout = this.logout.bind(this);\r\n\t}\r\n\tconvertTime(created) {\r\n\t  let date = new Date(created * 1000);\r\n\t  return date;\r\n\t}\r\n\tlogout(){\r\n\t\tsessionStorage.setItem(\"userData\",'');\r\n\t\tsessionStorage.clear();\r\n\t\tthis.setState({redirectToReferrer: true});\r\n\t  }\r\n\trender(){ \r\n\t\tif (this.state.redirectToReferrer) {\r\n\t\treturn (<Redirect to={'/'}/>)\r\n\t  }\r\n\t\treturn(\r\n\t\t\t<div>\t\r\n\t\t\t\t<div class=\"container-fluid\">\r\n\t\t\t\t    <div class=\"row\">\r\n\t\t\t\t        <div class=\"col-lg-3 col-md-4 col-sm-3 col-xs-6\">\r\n\t\t\t\t            <header> <h1>YONAC Trial</h1></header>\r\n\t\t\t\t        </div>\r\n\t\t\t\t    </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<nav>\r\n\t\t\t\t    <ul>\r\n\t\t\t\t        <li><a href=\"/dashboard\"><i data-feather=\"home\"></i> Dashboard</a></li>\r\n\t\t\t\t        <li><a href=\"/patients\">Patients</a></li>\r\n\t\t\t\t        <li><a href=\"\"  onClick={this.logout}>Logout</a></li>\r\n\t\t\t\t    </ul>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Dashboard;","import React from 'react';\r\nimport Head from '../header/head';\r\nclass Dashboard extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"inner\">\t\r\n\t\t\t\t<Head />\r\n\t\t\t    <section className=\"dashboard\">\r\n\t\t\t        <div className=\"container-fluid\">\r\n\t\t\t            <div className=\"row\">\r\n\t\t\t                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n\t\t\t                    <h1>Hi! Welcome</h1>\r\n\t\t\t                </div>\r\n\t\t\t                <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n\t\t\t                    <div className=\"con\">\r\n\t\t\t                        <h2>0</h2>\r\n\t\t\t                        <h4>New Patient</h4>\r\n\t\t\t                    </div>\r\n\t\t\t                </div>\r\n\t\t\t                <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n\t\t\t                    <div className=\"con\">\r\n\t\t\t                        <h2>0</h2>                       \r\n\t\t\t                        <h4>This Month</h4>\r\n\t\t\t                    </div>\r\n\t\t\t                </div>\r\n\t\t\t                <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n\t\t\t                    <div className=\"con\">\r\n\t\t\t                        <h2>0</h2>\r\n\t\t\t                        <h4>Total Patient</h4>\r\n\t\t\t                    </div>\r\n\t\t\t                </div>\r\n\t\t\t            </div>\t\t\t         \r\n\t\t\t        </div>\r\n\t\t\t    </section>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Dashboard;","import React from 'react';\r\nimport Head from '../header/head';\r\nimport \tReactPaginate from 'react-paginate';\r\nclass Patients extends React.Component{\r\n\tstate={\r\n\t\tloading: true,\r\n\t\tpatient:[],\r\n\t\tperPage:10,\r\n\t\tcurrentPage:0\r\n\t}\r\n\tasync componentDidMount(){\r\n\t\tconst url=\"http://localhost/react/admin/api/patients.php\";\r\n\t\tconst res = await fetch(url);\r\n\t\tconst data = await res.json();\r\n\t\tthis.setState({patient: data.results, loading:false});\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"inner\">\t\r\n\t\t\t\t<Head />\r\n\t\t\t    <section className=\"table\">\r\n\t\t\t        <div className=\"container-fluid\">\r\n\t\t\t            <div className=\"row\">\r\n\t\t\t                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n\t\t\t                    <h2 className=\"title\">Patients <a href=\"/add-new-patient\">Add New</a></h2>\r\n\t\t\t                   <table>\r\n\t\t\t                        <thead>\r\n\t\t\t                            <tr>\r\n\t\t\t                                <th>Sl.No</th>\r\n\t\t\t                                <th>Name</th>\r\n\t\t\t                                <th>UHID</th>\r\n\t\t\t                                <th>Age</th>\r\n\t\t\t                                <th width=\"10%\">Actions</th>\r\n\t\t\t                            </tr>\r\n\t\t\t                        </thead>\r\n\t\t\t                        <tbody>\t\r\n\t\t\t                        \t\r\n\t\t\t                        \t\t{this.state.patient.map((patient, i)=>(\r\n\t\t\t\t\t                        \t<tr key={`${i+1}`}>\r\n\t\t\t\t\t                        \t\t<td>{`${i+1}`}</td>\r\n\t\t\t\t\t                        \t\t<td>{patient.cd_pt_name}</td>\r\n\t\t\t\t\t                        \t\t<td>{patient.cd_pt_uhid}</td>\r\n\t\t\t\t\t                        \t\t<td>{patient.cd_pt_age}</td>\r\n\t\t\t\t\t                        \t\t<td><a href=\"edit-patient?id={patient.cd_pt_ID}\">Edit</a> | <a href=\"view-patient?id={this.state.patient.cd_pt_ID}\">View</a></td>\r\n\t\t\t\t\t                        \t</tr>\t\r\n\t\t                        \t\t\t))}\t\r\n\t\t\t                        \t\t               \r\n\t\t\t                        </tbody>\r\n\t\t\t                   </table>\r\n\t\t\t                </div>                \r\n\t\t\t            </div>\r\n\t\t\t        </div>\r\n\t\t\t    </section>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Patients;","import React from 'react';\r\nimport Head from '../header/head';\r\nclass Patients extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"inner\">\t\r\n\t\t\t\t<Head />\r\n                <section className=\"table\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                <h2 className=\"title\">Add New Patient</h2>\r\n                                <form action=\"\" method=\"POST\"> \r\n                                    <input type=\"hidden\" id=\"hsp_id\" name=\"hsp_id\" value=\"\" />\r\n                                    <h5>Section 1: Contact Details</h5>\r\n                                    <div className=\"con\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12\">\r\n                                                <label for=\"name\">Patient Name</label>\r\n                                                <input type=\"text\" id=\"pname\" name=\"pname\"/>\r\n                                                <label for=\"age\">Age</label>\r\n                                                <input type=\"text\" id=\"age\" name=\"age\"/>\r\n                                                <label for=\"uhid\">UHID</label>\r\n                                                <input type=\"text\" id=\"uhid\" name=\"uhid\" maxlength=\"5\"/>\r\n                                                <span id=\"error\"></span>\r\n                                                <label for=\"date\">Date</label>\r\n                                                <span className=\"dob\"><input type=\"text\" id=\"date\" name=\"date\" className=\"date\"/><img src=\"images/dob.svg\" alt=\"\"/></span>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12\">\r\n                                                <label for=\"address\">Address</label>\r\n                                                <textarea id=\"address\" name=\"address\"></textarea>\r\n                                                <label for=\"city\">City</label>\r\n                                                <input type=\"text\" id=\"city\" name=\"city\"/>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12\">\r\n                                                <label for=\"district\">District</label>\r\n                                                <input type=\"text\" id=\"district\" name=\"district\"/>\r\n                                                <label for=\"state\">State</label>\r\n                                                <input type=\"text\" id=\"state\" name=\"state\"/>\r\n                                                <label for=\"zip\">Postal Code</label>\r\n                                                <input type=\"text\" id=\"zip\" name=\"zip\"/>\r\n                                                <label for=\"landmark\">Landmark</label>\r\n                                                <input type=\"text\" id=\"landmark\" name=\"landmark\"/>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12\">                                   \r\n                                                <label>Marital Status</label>   \r\n                                                <div className=\"radio-btn marital\">\r\n                                                    <input type=\"radio\" value=\"Single\" id=\"single\" name=\"marital\"/>\r\n                                                    <label for=\"single\">Single</label>\r\n                                                    <input type=\"radio\" value=\"Married\" id=\"married\" name=\"marital\"/>\r\n                                                    <label for=\"married\">Married</label>\r\n                                                    <input type=\"radio\" value=\"Widow/Widower\" id=\"window\" name=\"marital\"/>\r\n                                                    <label for=\"window\">Widow/Widower</label>\r\n                                                    <input type=\"radio\" value=\"Separated/Divorced\" id=\"separated\" name=\"marital\"/>\r\n                                                    <label for=\"separated\">Separated/Divorced </label>\r\n                                                </div>\r\n                                               \r\n                                            </div>                                \r\n                                        </div>\r\n                                    </div>                      \r\n                                    <h5>Section 2: Eligibility assessment</h5>\r\n                                    <div className=\"con\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                <h5>Inclusion criteria</h5>\r\n                                                <label>Written informed consent</label>  \r\n                                                <div className=\"radio-btn consent\">\r\n                                                    <input type=\"radio\" id=\"yes\" value=\"Yes\" name=\"consent\"/>\r\n                                                    <label for=\"yes\">Yes</label>\r\n                                                    <input type=\"radio\" id=\"no\" value=\"No\" name=\"consent\"/>\r\n                                                    <label for=\"no\">No</label>\r\n                                                </div>\r\n                                                <label>Age 18 to 75 years</label>  \r\n                                                <div className=\"radio-btn years\">\r\n                                                    <input type=\"radio\" id=\"yes1\" value=\"Yes\" name=\"years\"/>\r\n                                                    <label for=\"yes1\">Yes</label>\r\n                                                    <input type=\"radio\" id=\"no1\" value=\"No\" name=\"years\"/>\r\n                                                    <label for=\"no1\">No</label>\r\n                                                </div>\r\n                                                <label>Has laboratory-confirmed SARS-CoV-2</label>  \r\n                                                <div className=\"radio-btn lab\">\r\n                                                    <input type=\"radio\" id=\"yes2\" value=\"Yes\" name=\"lab\"/>\r\n                                                    <label for=\"yes2\">Yes</label>\r\n                                                    <input type=\"radio\" id=\"no2\" value=\"No\" name=\"lab\"/>\r\n                                                    <label for=\"no2\">No</label>\r\n                                                </div>\r\n                                                <label>Asymptomatic / uncomplicated illness / mild pneumonia COVID-19</label>    \r\n                                                <div className=\"radio-btn symptoms\">\r\n                                                    <input type=\"radio\" id=\"yes3\" value=\"Yes\" name=\"symptoms\" />\r\n                                                    <label for=\"yes3\">Yes</label>\r\n                                                    <input type=\"radio\" id=\"no3\" value=\"No\" name=\"symptoms\" />\r\n                                                    <label for=\"no3\">No</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                <h5>Exclusion criteria</h5>\r\n                                                <label>Explicit non-willingness to be a part of the research study</label>  \r\n                                                <div className=\"radio-btn research\">\r\n                                                    <input type=\"radio\" id=\"yes4\" value=\"Yes\" name=\"research\" />\r\n                                                    <label for=\"yes4\">Yes</label>\r\n                                                    <input type=\"radio\" id=\"no4\" value=\"No\" name=\"research\" />\r\n                                                    <label for=\"no4\">No</label>\r\n                                                </div>\r\n                                                <label>Patients with moderate/severe stages of COVID19</label>  \r\n                                                <div className=\"radio-btn stages\">\r\n                                                    <input type=\"radio\" id=\"yes5\" value=\"Yes\" name=\"stages\" />\r\n                                                    <label for=\"yes5\">Yes</label>\r\n                                                    <input type=\"radio\" id=\"no5\" value=\"No\" name=\"stages\" />\r\n                                                    <label for=\"no5\">No</label>\r\n                                                </div>\r\n                                                <label>Participation in any other clinical trials</label>    \r\n                                                <div className=\"radio-btn trials\">\r\n                                                    <input type=\"radio\" id=\"yes6\" value=\"Yes\" name=\"trials\" />\r\n                                                    <label for=\"yes6\">Yes</label>\r\n                                                    <input type=\"radio\" id=\"no6\" value=\"No\" name=\"trials\" />\r\n                                                    <label for=\"no6\">No</label>\r\n                                                </div>\r\n                                            </div>                         \r\n                                        </div>\r\n                                    </div>                     \r\n                                    <h5>Section 3: Study group allocation</h5>\r\n                                    <div className=\"con\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n                                                <label>Eligibility met?</label>  \r\n                                                <div className=\"radio-btn eligible\">\r\n                                                    <input type=\"radio\" id=\"yes7\" value=\"Yes\" name=\"eligible\" />\r\n                                                    <label for=\"yes7\">Yes</label>\r\n                                                    <input type=\"radio\" id=\"no7\" value=\"No\" name=\"eligible\" />\r\n                                                    <label for=\"no7\">No</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                <label>Allocated group</label>  \r\n                                                <div className=\"radio-btn group\">\r\n                                                    <input type=\"radio\" id=\"yes8\" value=\"Yoga & Naturopathy Group\" name=\"group\" />\r\n                                                    <label for=\"yes8\">Yoga & Naturopathy Group</label>\r\n                                                    <input type=\"radio\" id=\"no8\" value=\"Usual care\" name=\"group\" />\r\n                                                    <label for=\"no8\">Usual care</label>\r\n                                                </div>\r\n                                            </div>                         \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"con\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n                                                <label for=\"completed\">Form completed by: </label>  \r\n                                                <input type=\"text\" id=\"allo\" name=\"allo\" />\r\n                                                <p><strong>Allopathic Doctor</strong></p>\r\n                                                <label for=\"date\">Date</label>\r\n                                                <span className=\"dob\"><input type=\"text\" className=\"date\" id=\"date1\" name=\"date1\" /><img src=\"images/dob.svg\" alt=\"\"/></span>\r\n                                            </div>\r\n                                            <div className=\"col-lg-4 col-md-4 col-sm-6 col-xs-12\"> \r\n                                                <label for=\"Doctor\">&nbsp;</label>  \r\n                                                <input type=\"text\" id=\"yoga\" name=\"yoga\" />\r\n                                                <p><strong>Yoga & Naturopathy Doctor</strong></p>\r\n                                            </div>                         \r\n                                        </div>\r\n                                    </div>\r\n                                    <button type=\"submit\" name=\"submit\">Submit</button>\r\n                                </form>\r\n                            </div>                \r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Patients;","import React from 'react'; \nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Login from './components/login/login';\nimport Dashboard from './components/dashboard/dashboard';\nimport Patients from './components/patients/patients';\nimport AddPatient from './components/patients/add-new-patient';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div>\n      <Route exact path=\"/\" component={Login}/>\n      <Route path=\"/dashboard\" component={Dashboard}/>\n      <Route path=\"/patients\" component={Patients}/>\n      <Route path=\"/add-new-patient\" component={AddPatient}/>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}